# v0.3.0 and up Manifest example written in yaml (toml and json are also acceptable)

id: electrs
title: "Hello World"
version: 0.9.5
release-notes: "Initial release for EmbassyOS"
license: mit
wrapper-repo: "https://github.com/Start9Labs/electrs-wrapper"
upstream-repo: "https://github.com/romanz/electrs"
support-site: "https://github.com/romanz/electrs/issues"
marketing-site: "https://github.com/romanz/electrs"
build: ["make"]
description:
  short: An efficient re-implementation of Electrum Server in Rust 
  long: |
    An efficient re-implementation of Electrum Server, inspired by ElectrumX, Electrum Personal Server and bitcoincore-indexd. The motivation behind this project is to enable a user to self host an Electrum server, with required hardware resources not much beyond those of a full node. The server indexes the entire Bitcoin blockchain, and the resulting index enables fast queries for any given user wallet, allowing the user to keep real-time track of balances and transaction history using the Electrum wallet. Since it runs on the user's own machine, there is no need for the wallet to communicate with external Electrum servers, thus preserving the privacy of the user's addresses and balances.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /data
# health-checks:
#   main:
#     name: Electrum Interface
#     success-image: The electrum interface is operational.
#     type: docker
#     image: main
#     entrypoint: "check-electrum.sh"
#     args: []
#     inject: true
#     system: false
#     io-format: json
config: ~
properties: ~
volumes:
  main:
    type: data
  compat:
    type: assets 
interfaces:
  electrum:
    name: Electrum Interface
    description: Serves an electrum API for use with compatible wallets
    tor-config:
      port-mapping:
        50001: "50001"
    lan-config:
      50001:
        ssl: true
        mapping: 50001
    ui: false
    protocols:
      - tcp
      - electrum
alerts: ~
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /data
    mounts:
      BACKUP: /mnt/backup
      main: /data
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /data
      - /mnt/backup
    mounts:
      BACKUP: /mnt/backup
      main: /data
